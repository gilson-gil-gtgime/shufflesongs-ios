//
//  ListViewControllerTests.swift
//  ShuffleSongs
//
//  Created by Gilson Gil on 22/03/19.
//  Copyright (c) 2019 Gilson Gil. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import ShuffleSongs

import Quick
import Nimble

final class ListViewControllerSpec: QuickSpec {
  override func spec() {
    let rootViewController = RootViewController()
    let sut = rootViewController.viewControllers[0] as! ListViewController
    let window = UIWindow()
    window.rootViewController = rootViewController
    window.makeKeyAndVisible()

    describe("given a list view controller") {
      waitUntil(timeout: 1) { finished in
        finished()
      }
      context("when successfully loaded") {
        it("should display a list of tracks") {
          expect(sut.listView?.tableView.numberOfRows(inSection: 0)).toEventuallyNot(equal(0))
        }
        it("should display tracks correctly") {
          let track = sut.displayedTracks?[0]
          let cell = sut.listView?.tableView.cellForRow(at: IndexPath(row: 0, section: 0)) as! ListTrackCell
          expect((cell.viewWithTag(2) as? UILabel)?.text).to(equal(track?.name))
          expect((cell.viewWithTag(3) as? UILabel)?.text).to(equal(track?.info))
        }
      }
      context("when shuffle button is tapped") {
        it("should display a list of tracks shuffled") {
          let list = sut.displayedTracks?.compactMap { $0.name }
          sut.didTapShuffle(at: sut.listView as! ListView)
          expect(sut.displayedTracks?.compactMap { $0.name }).toEventuallyNot(equal(list))
        }
        it("should display tracks correctly after shuffle") {
          let track = sut.displayedTracks?[0]
          let cell = sut.listView?.tableView.cellForRow(at: IndexPath(row: 0, section: 0)) as! ListTrackCell
          expect((cell.viewWithTag(2) as? UILabel)?.text).to(equal(track?.name))
          expect((cell.viewWithTag(3) as? UILabel)?.text).to(equal(track?.info))
        }
      }
    }
  }
}
