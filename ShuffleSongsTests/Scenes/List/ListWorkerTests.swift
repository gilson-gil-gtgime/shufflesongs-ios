//
//  ListWorkerTests.swift
//  ShuffleSongs
//
//  Created by Gilson Gil on 22/03/19.
//  Copyright (c) 2019 Gilson Gil. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import ShuffleSongs

import Quick
import Nimble

final class ListWorkerSpec: QuickSpec {
  override func spec() {
    let sut = ListWorker()
    let list = [
      Track(identifier: 1, artistId: 1, name: "Song1"),
      Track(identifier: 2, artistId: 1, name: "Song2"),
      Track(identifier: 3, artistId: 2, name: "Song3"),
      Track(identifier: 4, artistId: 2, name: "Song4"),
      Track(identifier: 5, artistId: 3, name: "Song5"),
      Track(identifier: 6, artistId: 3, name: "Song6")
    ]

    describe("given a listWorker") {
      context("when shuffled") {
        it("should have random results") {
          let shuffledList = sut.shuffle(list: list)
          var isDifferent = shuffledList.enumerated().reduce(false) {
            $0 || shuffledList[$1.offset].identifier != list[$1.offset].identifier
          }
          expect(isDifferent).to(equal(true))
          let shuffledList2 = sut.shuffle(list: list)
          isDifferent = shuffledList2.enumerated().reduce(false) {
            $0 || shuffledList2[$1.offset].identifier != list[$1.offset].identifier
          }
          isDifferent = shuffledList2.enumerated().reduce(false) {
            $0 || shuffledList2[$1.offset].identifier != shuffledList[$1.offset].identifier
          }
        }
      }
    }
  }
}
