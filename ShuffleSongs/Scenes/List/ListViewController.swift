//
//  ListViewController.swift
//  ShuffleSongs
//
//  Created by Gilson Gil on 22/03/19.
//  Copyright (c) 2019 Gilson Gil. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListDisplayLogic: class {
  func displayLoading()
  func displayList(viewModel: List.SongsList.ViewModel)
}

final class ListViewController: UIViewController {
  var interactor: ListBusinessLogic?
  var listView: ListViewLogic?

  // MARK: - Object lifecycle

  init() {
    super.init(nibName: nil, bundle: nil)
    setup()
  }

  required init?(coder aDecoder: NSCoder) {
    super.init(coder: aDecoder)
    setup()
  }

  // MARK: - Setup

  private func setup() {
    let viewController = self
    let interactor = ListInteractor()
    let presenter = ListPresenter()
    viewController.interactor = interactor
    interactor.presenter = presenter
    presenter.viewController = viewController
  }

  // MARK: View lifecycle

  override func loadView() {
    let listView = ListView()
    self.listView = listView
    self.view = listView
  }

  override func viewDidLoad() {
    super.viewDidLoad()
    fetchList()
  }
  
  // MARK: - Fetch List
  
  func fetchList() {
    let request = List.SongsList.Request()
    interactor?.fetchList(request: request)
    displayLoading()
  }
}

// MARK: - Display Logic
extension ListViewController: ListDisplayLogic {
  func displayLoading() {
    DispatchQueue.main.async {
      self.listView?.tableView.isHidden = true
      self.listView?.activityIndicator.startAnimating()
    }
  }

  func displayList(viewModel: List.SongsList.ViewModel) {
    DispatchQueue.main.async {
      self.listView?.tableView.isHidden = false
      self.listView?.activityIndicator.stopAnimating()
    }
  }
}
